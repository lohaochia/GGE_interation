rm(list=ls())
setwd("C:/Users/t1240/Desktop")
PC=read.table("a.txt",row.name="ID",header = T)
###########################################################
###########################################################
####PCA_of_multiple_traits
pc1=princomp(PC,cor=T)
pc1
summary(pc1)
plot(pc1)
pc1$loadings
print(pc1$loadings,digits=8,cotoff=0)
pc1$scores
biplot(pc1,cex=0.8,repel = T,xlab="PC1 (92.2 %)",ylab="PC2 (6.1 %)",size=1,main="15 DAS (growth chamber)")
###########################################################
###########################################################
#######GGEbipot
install.packages("GGEBiplotGUI")
install.packages("ggplot2")
library(GGEBiplots)
library(ggplot2)
rm(list=ls())
setwd("C:/Users/t1240/Desktop")
PC=read.table("a.txt",row.name="ID",header = T)
GGE1<-GGEModel(PC,centering = "tester", scaling = "none", SVP = "dual")
DiscRep(GGE1,axis_expand = 1.15,textGen = element_text(family ="", face = 9, color = "black", size =4, hjust= 0, vjust = 0, angle = 0),textEnv = element_text(family = "", face = 1, color = "blue", size = 12, hjust = 0,vjust = 0, angle = 0))
DiscRep(GGE1,axis_expand = 1)
DiscRep(GGE1,axis_expand = 0.5)
EnvRelationship(GGE1)
CompareGens(GGE1,"W225","W36")
ExamineEnv(GGE1,"JUL",largeSize = 5)


GGEPlot(GGE1,axis_expand = 1.3)


GGEModel(PC, centering = "global", scaling = "none", SVP = "column")
RankGen(GGE1)

MeanStability(GGE1,largeSize = 1)

data(PC2)
data(Ontario)

simdata<-data.frame(expand.grid(Genotype=1:10,Environment=1:10,Rep=1:3),Outcome=rnorm(300))
meantab<-stattable(simdata$Genotype,simdata$Environment,simdata$Outcome,FUN=mean,na.rm=TRUE)
GGEPlot(GGEModel(meantab))
WhichWon(GGE1)




####用metan
install.packages("metan")
library(metan)
setwd("C:/Users/t1240/OneDrive/桌面")
MMET=read.table("a.txt",header = T)
#
amod1=performs_ammi(MMET,ENV,GEN,REP,trait)
last_error(MMET)
MMET$ENV=factor(MMET$ENV, levels=unique(MMET$ENV))
MMET$GEN=factor(MMET$GEN, levels=unique(MMET$GEN))
MMET$REP=factor(MMET$REP, levels=unique(MMET$REP))
str(MMET)
inspect(MMET,plot=T)
mg=means_by(MMET, GEN)
me=means_by(MMET, ENV)
mge=MMET %>%
  group_by(ENV,GEN) %>%
  desc_stat(LR, stats="mean")
ge_plot(MMET,ENV,GEN,LR,type=1)
ge_winners(MMET,ENV,GEN,resp=everything())
ranks=ge_winners(MMET,ENV,GEN,resp=everything(),type = "ranks")
indav=anova_ind(MMET,ENV,GEN,REP,resp=LR)
panv=anova_joint(MMET,ENV,GEN,REP,LR)


MMET=read.table("a.txt",header = T)
ann1=Annicchiarico(MMET,ENV,GEN,REP,trait)
print(ann1)
eco1=ecovalence(MMET,ENV,GEN,REP,LR)
shu1=Shukla(MMET,ENV,GEN,REP,LR)
reg1=ge_reg(MMET,ENV,GEN,REP,LR)
plot(reg1)

super1=superiority(MMET,ENV,GEN,LR)
print(super1)

fox1=Fox(MMET,ENV,GEN,LR)
################################################
#############################################
##################################################
library(metan)
setwd("C:/Users/t1240/Desktop")
#

MMET=read.table("a.txt",header = T)
#先建模
amod1=performs_ammi(MMET,ENV,GEN,REP,trait)

plot_scores(amod1,type = 1)
plot_scores(amod1,type = 1,col.env="red",col.segm.env="red")
plot_scores(amod1,type = 2,col.env="red",col.segm.env="red",polygon=T)
a=amod1[["trait"]][["ANOVA"]]
write.csv(c, file="a.csv", row.names = T)
b=amod1[["trait"]][["model"]]
write.csv(b, file="b.csv", row.names = T)
##,y.lim=c(-1.9,2),x.lim=c(0,3),y.lim=c(-1.7,1.5),
MMET=read.table("a.txt",header = T)
w=gge(MMET, ENV, GEN,trait,
      centering = 2,
      scaling = "none",svp = 3,
      by = NULL)##center=2=G+GE
plot(w,type = 4,cex=0.1,col.env="red",col.line ="red")
plot(w,type = 3,cex=0.1,col.env="red",col.line ="red")#多邊形

plot(w,type = 2,cex=0.1,col.env="red",col.line ="red",sel_env="JUL")#特定環境


#plot(w,type = 5,cex=0.1,col.env="red",col.line ="red",sel_env="SEP_2")
w2=gge(MMET, ENV, GEN,trait,
      centering = 2,
      scaling = "none",svp = 1,
      by = NULL)##center=2=G+GE
plot(w2,type = 2,cex=0.1,col.env="red",col.line ="red")#meanAEC
#########################
###########################
#########################
###########################

a=amod1[["trait"]][["model"]]
write.csv(a, file="ipca.csv", row.names = T)


plot(amod1)

get_model_data(amod1,"ipca_pval")


a1=plot_scores(amod1,type = 4)
a1

a2=plot_scores(amod1,type = 1)
a2



####################
gge_eff <- gge_effects(MMET, ENV, GEN, LR)
plot(gge_eff)
w=ge_means(MMET, ENV, GEN)
ge_plot(MMET, ENV, GEN,
  type = 2,
  plot_theme = theme_metan(),
  colour = TRUE
)
ge_winners(MMET, ENV, GEN,trait, type = "winners", better = NULL)
#畫ggebiplot
w=gge(MMET, ENV, GEN,trait,
  centering = 1,
  scaling = "none",svp = 3,
  by = NULL
)
plot(w,type = 4)

plot(gge_eff,type = 3)
predict(w, naxis = 2, output = "wide")





###waasb
model <- waasb(MMET,
               env = ENV,
               gen = GEN,
               rep = REP,
               resp = LR)
predict(model)
plot_scores(model)


model <- performs_ammi(MMET, ENV, GEN, REP,
                       resp = LR)
model <- waas(MMET,
              env = ENV,
              gen = GEN,
              rep = REP,
              resp = everything())
##################################


plot(a$average,a$b,col="white")
b=c(a$average)
c=c(a$b)
d=c(a$ID)
text(x=b, y=c,labels=d, adj = NULL,
     pos = NULL, offset = 0.5, vfont = NULL,
     cex = 0.7, col = NULL, font = NULL)
text(x=(as.numeric(a$average)+0.3),y=(as.numeric(a$b)),labels=d)
abline(v=29.906)
abline(h=0)
